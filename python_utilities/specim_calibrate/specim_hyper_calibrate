#!/usr/bin/env python3

"""
Executable for reflectance calibration of multiple hyperspectral Specim images
in one go.  Assumed here that each image have dark and reflectance standard
images available. See `read_specim_files()` in `specim_calibration.py` for
assumed filenames.

See c_utilities/hyper_calibrate for the same for more general, camera-agnostic
images where the reflectance standard is placed within the image.

Asgeir Bjorgan, NTNU
"""

from specim_calibration import calibrate_and_write
import os


import argparse

if __name__ == '__main__':
    #parse arguments
    parser = argparse.ArgumentParser(description='Read hyperspectral files produced using a SpecIm camera, calibrate to reflectance and write back to new files. The calibrated image is written to the basename of the input filename with \'_calibrated\' appended.')
    parser.add_argument('--output-directory', metavar='output_directory', type=str, default='./',
            help='Output directory for hyperspectral file output. Working directory is assumed by default.')
    parser.add_argument('files', metavar='file', type=str, nargs='+',
            help='Path to hyperspectral image')

    args = parser.parse_args()
    output_directory = args.output_directory
    files = args.files

    #calibrate files
    for i, filename in enumerate(files):
        output_filename = os.path.join(output_directory, os.path.splitext(os.path.basename(filename))[0] + '_calibrated')
        print('Calibrating ' + filename + ' to ' + output_filename + ' (' + str(i) + '/' + str(len(files)-1) + '):')
        calibrate_and_write(filename, output_filename)
